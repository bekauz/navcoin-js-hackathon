{"version":3,"sources":["components/Wrapper.tsx","components/Loading.tsx","themes/Default.tsx","App.tsx","components/Container.tsx","components/Error.tsx","components/Settings.tsx","components/Mnemonic.tsx","components/AskPassword.tsx","components/Send.tsx","components/ConfirmTx.tsx","components/Gift.tsx","components/GiftCardDialog.tsx","logo.svg","constants/index.tsx","utils/Mnemonic.tsx","components/MainMenu/ImportWallet.tsx","components/MainMenu/CreateWallet.tsx","components/MainMenu/OpenWallet.tsx","components/MainMenu/CreateWalletWithCode.tsx","components/MainMenu.tsx","assets/NAV.png","assets/XNAV.png","components/Balance.tsx","components/elements/SplitButton.tsx","components/Receive.tsx","index.tsx"],"names":["Wrapper","props","sx","minWidth","minHeight","maxWidth","alignItems","flexDirection","display","children","Loading","actions","pr","pl","textAlign","height","overflow","justifyContent","xs","color","my","map","e","onClick","action","text","themeOptions","createTheme","palette","mode","primary","main","secondary","error","info","warning","success","divider","background","default","paper","spacing","components","MuiButton","defaultProps","variant","fullWidth","disableFocusRipple","styleOverrides","root","padding","width","fontSize","MuiCardHeader","avatar","marginRight","content","margin","MuiCardActions","paddingBottom","MuiCardContent","maxHeight","MuiFormControl","MuiIconButton","disableRipple","backgroundColor","MuiAccordionSummary","marginTop","paddingTop","border","boxShadow","MuiAccordion","MuiContainer","paddingLeft","paddingRight","MuiBottomNavigation","typography","responsiveFontSizes","factor","INITIAL_STATE","walletName","walletList","loadingWallet","connectingWallet","redeemingGiftCode","errorLoad","bottomNavigation","balances","nav","confirmed","pending","xnav","cold","history","syncProgress","pendingQueue","addresses","utxos","mnemonic","showMnemonic","askPassword","afterPassword","undefined","errorPassword","confirmTxText","showConfirmTx","showGiftCardDialog","giftCardText","toSendTxs","blockHeight","App","React","Component","constructor","super","state","njs","wallet","mn","require","onSend","async","from","to","amount","type","address","afterFunc","db","GetMasterKey","password","setState","onSendPassword","txs","NavCreateTransaction","fee","tx","toString","xNavCreateTransaction","onGift","onGiftPassword","name","Math","random","substring","walletPassword","spendingPassword","generateTempWallet","Connect","NavReceivingAddresses","xNavReceivingAddresses","walletToEncode","tempMnemonicStore","network","transactionType","amt","encodedWallet","Buffer","JSON","stringify","on","entry","console","log","onRedeemGiftCode","giftCode","privateAddress","publicAddress","decodedGiftCode","giftWalletSrc","parse","giftWallet","this","WalletFile","file","adapter","giftObservable$","Observable","giftObserver","next","giftInfo","walletBalance","walletObj","GetBalance","giftSrc","showConfirmText","complete","Disconnect","RemoveWallet","updateWalletList","subscribe","giftWrapper","Load","render","theme","open","onClose","onOk","SendTransaction","onAccept","backToMainMenu","onSwap","onStake","balance","onRemove","onMnemonic","position","bottom","left","right","elevation","showLabels","value","onChange","event","newValue","label","icon","wallets","onLoad","zap","loadWallet","alreadyLoaded","localforage","ListWallets","zapwallettxes","GetHistory","GetUtxos","stakingAddresses","GetStakingAddresses","GetAllAddresses","a","b","progress","receivingAddresses","Object","keys","server","bootstrap","xNavBootstrap","CloseDb","newMnemonic","fadeIn","keyframes","container","animation","px","Error","Settings","title","setTitle","option","setOption","m","mb","wordWrap","borderRadius","mt","alignSelf","mx","fontWeight","pb","BootstrapDialogTitle","other","p","top","grey","Mnemonic","handleClose","id","gutterBottom","wordBreak","autoFocus","AskPassword","setPassword","useState","handleAccept","autoComplete","target","light","Send","destination","utxoType","hideTitle","hideTo","hideFrom","setFrom","available","setAvailable","setTo","setAmount","errorDest","setErrorDest","errorAmount","setErrorAmount","pt","bgcolor","labelId","input","displayEmpty","placeholder","InputLabelProps","shrink","bitcore","Address","isValid","getValidationError","am","parseFloat","InputProps","endAdornment","float","ConfirmTx","Gift","setGiftCode","errorGiftCode","setErrorGiftCode","giftCodeVal","code","validateGiftCode","GiftCardDialog","style","TITLE","electrumMnemonic","IsValidMnemonic","validateMnemonic","PREFIXES","standard","ImportWallet","walletTypes","networks","errorMnemonic","errorName","getWalletName","i","el","getNetworkName","Box","Stack","TextField","indexOf","multiline","Select","renderValue","Typography","result","MenuItem","Divider","Button","CreateWallet","OpenWallet","FormControlLabel","control","Checkbox","checked","labelPlacement","CreateWalletWithCode","Fragment","MainMenu","CssBaseline","CardHeader","IconButton","CardContent","src","logo","length","getWindowDimensions","innerWidth","innerHeight","window","Balance","hideWarning","setHideWarning","pageNumber","setPageNumber","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","anchorEl","setAnchorEl","itemsCount","Boolean","floor","LinearProgress","Alert","severity","flexWrap","toLocaleString","verticalAlign","staked","List","flexGrow","slice","elMemos","memos","out","renderGiftIcon","startsWith","ListItem","ListItemAvatar","Avatar","alt","ListItemText","String","RedeemOutlined","Date","timestamp","Pagination","count","ceil","shape","SplitButton","options","setOpen","anchorRef","selectedIndex","setSelectedIndex","current","contains","ButtonGroup","ref","size","prevOpen","Popper","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","index","selected","handleMenuItemClick","Receive","addressType","setAddressType","used","addressTypes","addressOptions","spending","public","push","private","Init","then","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6dceae6.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { Card } from \"@material-ui/core\";\n\nfunction Wrapper(props: any) {\n  return (\n    <Card\n      sx={{\n        minWidth: [\"100%\"], //, '400px'],\n        minHeight: [\"100%\"], //, '100px'],\n        maxWidth: [\"100%\"], //, '400px'],\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        display: \"flex\",\n      }}\n    >\n      {props.children}\n    </Card>\n  );\n}\n\nexport default Wrapper;\n","import WarningSharpIcon from '@material-ui/icons/WarningSharp';\nimport React from \"react\";\nimport Wrapper from \"./Wrapper\";\nimport {CardContent, CardHeader, Typography, Box, CardActions, Button, LinearProgress} from \"@material-ui/core\";\n\nfunction Loading(props:any) {\n    const {actions} = props;\n    return (\n        <Wrapper>\n            <CardHeader>\n\n            </CardHeader>\n            <CardContent sx={{\n                pr: '40px',\n                pl: '40px',\n                textAlign: 'center',\n                height: '100%',\n                overflow: 'none',\n                justifyContent: { xs: 'center' } //, sm: 'normal'}\n            }\n            }>\n                <Typography>\n                    {props.children}\n                </Typography>\n                <LinearProgress color=\"secondary\" sx={{\n                    my: 2\n                }} />\n\n            </CardContent>\n            <CardActions>\n                {\n                    actions ? actions.map((e: any) => {\n                        return (\n                            <Button key={e.text} onClick={e.action}>{e.text}</Button>\n                        )\n                    }) : ''\n                }\n\n            </CardActions>\n        </Wrapper>\n    )\n}\n\nexport default Loading;","import { createTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\n\nlet themeOptions = createTheme({\n  palette: {\n    mode: \"dark\",\n    primary: {\n      main: \"#B39DDB\",\n    },\n    secondary: {\n      main: \"#90caf9\",\n    },\n    error: {\n      main: \"#ffab91\",\n    },\n    info: {\n      main: \"#90caf9\",\n    },\n    warning: {\n      main: \"#ffcc80\",\n    },\n    success: {\n      main: \"#a5d6a7\",\n    },\n    divider: \"#b0bec5\",\n    text: {\n      primary: \"#eeeeee\",\n    },\n    background: {\n      default: \"#303030\",\n      paper: \"#424242\",\n    },\n  },\n  spacing: 10,\n  components: {\n    MuiButton: {\n      defaultProps: {\n        variant: \"contained\",\n        fullWidth: true,\n        disableFocusRipple: true,\n      },\n      styleOverrides: {\n        root: {\n          padding: \"10px 20px 10px 20px\",\n          width: \"100%\",\n          fontSize: 12,\n        },\n      },\n    },\n    MuiCardHeader: {\n      styleOverrides: {\n        avatar: {\n          marginRight: \"0px\",\n        },\n        root: {\n          width: \"100%\",\n        },\n        content: {\n          padding: \"0px\",\n          margin: \"0px\",\n        },\n      },\n    },\n    MuiCardActions: {\n      styleOverrides: {\n        root: {\n          paddingBottom: \"50px\",\n        },\n      },\n    },\n    MuiCardContent: {\n      styleOverrides: {\n        root: {\n          width: \"100%\",\n          overflow: \"scroll\",\n          maxHeight: \"90%\",\n          maxWidth: \"400px\",\n          height: \"90%\",\n          flexDirection: \"column\",\n          display: \"flex\",\n          \"&:last-child\": {\n            paddingBottom: \"20px\",\n          },\n        },\n      },\n    },\n    MuiFormControl: {\n      defaultProps: {\n        fullWidth: true,\n      },\n      styleOverrides: {\n        root: {\n          paddingBottom: \"10px\",\n        },\n      },\n    },\n    MuiIconButton: {\n      defaultProps: {\n        disableFocusRipple: true,\n        disableRipple: true,\n      },\n      styleOverrides: {\n        root: {\n          \"&:hover\": {\n            backgroundColor: \"rgba(255, 255, 255, 0.0)\",\n            color: \"#B39DDB\",\n          },\n        },\n      },\n    },\n    MuiAccordionSummary: {\n      styleOverrides: {\n        root: {\n          marginTop: \"10px\",\n          paddingTop: \"10px\",\n          border: \"0px\",\n          boxShadow: \"0px\",\n        },\n      },\n    },\n    MuiAccordion: {\n      styleOverrides: {\n        root: {\n          backgroundColor: \"#424242\",\n          border: \"0px\",\n          boxShadow: \"none\",\n        },\n      },\n    },\n    MuiContainer: {\n      styleOverrides: {\n        root: {\n          paddingLeft: \"0px\",\n          paddingRight: \"0px\",\n        },\n      },\n    },\n    MuiBottomNavigation: {\n      styleOverrides: {\n        root: {\n          overflow: \"scroll\",\n        },\n      },\n    },\n  },\n  typography: {},\n});\n\nthemeOptions = responsiveFontSizes(themeOptions, { factor: 1.1 });\n\nexport default themeOptions;\n","import React from \"react\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\n\nimport Container from \"./components/Container\";\nimport MainMenu from \"./components/MainMenu\";\n\nimport themeOptions from \"./themes/Default\";\nimport Error from \"./components/Error\";\nimport Loading from \"./components/Loading\";\n\nimport {\n  BottomNavigation,\n  BottomNavigationAction,\n  Paper,\n} from \"@material-ui/core\";\n\nimport {\n  AccountBalanceOutlined,\n  MoveToInboxOutlined,\n  PaymentOutlined,\n  SettingsOutlined,\n} from \"@material-ui/icons\";\n\nimport Balance from \"./components/Balance\";\nimport Settings from \"./components/Settings\";\nimport * as localforage from \"localforage\";\nimport Mnemonic from \"./components/Mnemonic\";\nimport AskPassword from \"./components/AskPassword\";\nimport xnav from \"./assets/XNAV.png\";\nimport nav from \"./assets/NAV.png\";\nimport Receive from \"./components/Receive\";\nimport Send from \"./components/Send\";\nimport ConfirmTx from \"./components/ConfirmTx\";\nimport Gift from \"./components/Gift\";\nimport { Observable } from \"rxjs\";\nimport GiftCardDialog from \"./components/GiftCardDialog\";\n\nthemeOptions.spacing(10);\n\ninterface IAppState {\n  walletName: string;\n  walletList: string[];\n  loadingWallet: boolean;\n  connectingWallet: boolean;\n  redeemingGiftCode: boolean;\n  errorLoad: string;\n  bottomNavigation: any;\n  balances: {\n    nav: { confirmed: number; pending: number };\n    xnav: { confirmed: number; pending: number };\n    cold: { confirmed: number; pending: number };\n  };\n  history: IWalletHistory[];\n  syncProgress: number;\n  pendingQueue: number;\n  addresses: any;\n  utxos: any;\n  mnemonic: string;\n  showMnemonic: boolean;\n  askPassword: boolean;\n  afterPassword: any;\n  errorPassword: string;\n  confirmTxText: string;\n  showConfirmTx: boolean;\n  toSendTxs: string[];\n  showGiftCardDialog: boolean;\n  giftCardText: string;\n\n  blockHeight: number;\n}\n\ninterface IWalletHistory {\n  wallettxid: string;\n  amount: number;\n  type: string;\n  confirmed: boolean;\n  height: number;\n  pos: number;\n  timestamp: number;\n  memos: string[];\n}\n\ninterface IGiftTransferWrapper {\n  walletObj: any;\n  giftSrc: any;\n}\n\nconst INITIAL_STATE: IAppState = {\n  walletName: \"\",\n  walletList: [],\n  loadingWallet: false,\n  connectingWallet: false,\n  redeemingGiftCode: false,\n  errorLoad: \"\",\n  bottomNavigation: 0,\n  balances: {\n    nav: { confirmed: 0, pending: 0 },\n    xnav: { confirmed: 0, pending: 0 },\n    cold: { confirmed: 0, pending: 0 },\n  },\n  history: [],\n  syncProgress: -1,\n  pendingQueue: -1,\n  addresses: {},\n  utxos: [],\n  mnemonic: \"\",\n  showMnemonic: false,\n  askPassword: false,\n  afterPassword: undefined,\n  errorPassword: \"\",\n  confirmTxText: \"\",\n  showConfirmTx: false,\n  showGiftCardDialog: false,\n  giftCardText: \"\",\n\n  toSendTxs: [],\n  blockHeight: -1,\n};\n\nclass App extends React.Component<any, any> {\n  public state: IAppState;\n  public njs: any;\n  public wallet: any;\n\n  public mn = require('electrum-mnemonic');\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      ...INITIAL_STATE,\n    };\n    this.njs = props.njs;\n  }\n\n  public async componentDidMount() {\n    await this.updateWalletList();\n\n    const alreadyLoaded: string =\n      (await localforage.getItem(\"walletName\")) || \"\";\n\n    if (alreadyLoaded != \"\") {\n      await this.loadWallet(alreadyLoaded, \"\", \"\", \"\", \"\", false, undefined, undefined);\n    }\n  }\n\n  public async updateWalletList() {\n    const wallets = await this.njs.wallet.WalletFile.ListWallets();\n    this.setState({ walletList: wallets });\n  }\n\n  public async loadWallet(\n    name: string,\n    mnemonic: string,\n    type: string,\n    password: string,\n    spendingPassword: string,\n    zap: boolean,\n    network: string | undefined,\n    giftCode: string | undefined,\n  ) {\n    try {\n      this.wallet = new this.njs.wallet.WalletFile({\n        file: name,\n        mnemonic: mnemonic,\n        type: type,\n        password: password,\n        spendingPassword: spendingPassword,\n        zapwallettxes: zap,\n        network: network,\n        log: true,\n        adapter: \"websql\",\n      });\n\n      this.setState({\n        loadingWallet: true,\n        errorLoad: undefined,\n      });\n\n      this.wallet.on(\"db_load_error\", async (e: string) => {\n        await localforage.setItem(\"walletName\", \"\");\n        this.setState({\n          loadingWallet: false,\n          walletName: undefined,\n          errorLoad:\n            \"Could not load the database. You introduced a wrong password or the data is corrupted.\",\n        });\n      });\n\n      this.wallet.on(\"db_closed\", async () => {\n        await localforage.setItem(\"walletName\", \"\");\n        this.setState({\n          loadingWallet: false,\n          walletName: undefined,\n        });\n      });\n\n      this.wallet.on(\"loaded\", async () => {\n        const history = await this.wallet.GetHistory();\n\n        await localforage.setItem(\"walletName\", name);\n\n        this.setState({\n          loadingWallet: false,\n          errorLoad: undefined,\n          balances: await this.wallet.GetBalance(),\n          utxos: await this.wallet.GetUtxos(0xff),\n          stakingAddresses: await this.wallet.GetStakingAddresses(),\n          addresses: await this.wallet.GetAllAddresses(),\n          history: history,\n          walletName: name,\n        });\n\n        await this.wallet.Connect();\n      });\n\n      this.wallet.on(\"new_staking_address\", async (a: any, b: any) => {\n        this.setState({\n          stakingAddresses: await this.wallet.GetStakingAddresses(),\n          addresses: await this.wallet.GetAllAddresses(),\n        });\n      });\n\n      this.wallet.on(\n        \"sync_status\",\n        async (progress: number, pending: number) => {\n          if (pending % 50 == 0) {\n            const history: IWalletHistory[] = await this.wallet.GetHistory();\n\n            this.setState({\n              balances: await this.wallet.GetBalance(),\n              history,\n              utxos: await this.wallet.GetUtxos(0xff),\n              addresses: await this.wallet.GetAllAddresses(),\n            });\n          }\n          this.setState({ syncProgress: progress, pendingQueue: pending });\n        }\n      );\n\n      this.wallet.on(\"sync_finished\", async () => {\n        const history: IWalletHistory[] = await this.wallet.GetHistory();\n\n        this.setState({\n          balances: await this.wallet.GetBalance(),\n          history,\n          utxos: await this.wallet.GetUtxos(0xff),\n          addresses: await this.wallet.GetAllAddresses(),\n        });\n        this.setState({ syncProgress: 100, pendingQueue: 0 });\n        console.log(await this.wallet.GetHistory());\n        if (giftCode != undefined) {\n          console.log(`connected with gift code: ${giftCode}`)\n          const receivingAddresses = await this.wallet.GetAllAddresses();\n          console.log(`ready to redeem to addresses: `);\n          console.log(receivingAddresses);\n          await this.onRedeemGiftCode(\n            giftCode,\n            Object.keys((receivingAddresses)[\"spending\"]['private'])[0],\n            Object.keys((receivingAddresses)[\"spending\"]['public'])[0],\n          );\n          giftCode = undefined;\n        }\n      });\n\n      this.wallet.on(\"connected\", (server: string) =>\n        console.log(`connected to ${server}. waiting for sync`)\n      );\n\n      this.wallet.on(\"new_mnemonic\", async (mnemonic: string) => {\n        await this.updateWalletList();\n        this.setState({ showMnemonic: true, mnemonic: mnemonic });\n      });\n\n      this.wallet.on(\"new_tx\", async (entry: IWalletHistory) => {\n        //console.log(entry);\n      });\n\n      this.wallet.on(\"new_block\", (height: number) => {\n        this.setState({ blockHeight: height });\n      });\n\n      await this.wallet.Load({ bootstrap: this.njs.wallet.xNavBootstrap });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  public async onRemove(name?: string) {\n    const { walletName } = this.state;\n    this.wallet.Disconnect();\n    this.njs.wallet.WalletFile.RemoveWallet(name || walletName);\n    await localforage.setItem(\"walletName\", \"\");\n    await this.updateWalletList();\n    this.setState({ bottomNavigation: 0, walletName: \"\" });\n  }\n\n  public async onClose() {\n    this.wallet.Disconnect();\n    this.wallet.CloseDb();\n    await localforage.setItem(\"walletName\", \"\");\n    this.setState({ bottomNavigation: 0, walletName: \"\" });\n  }\n\n  public backToMainMenu() {\n    this.setState({ errorLoad: undefined });\n  }\n\n  public async showMnemonic(password: string) {\n    const mnemonic: string = await this.wallet.db.GetMasterKey(\n      \"mnemonic\",\n      password\n    );\n\n    if (mnemonic) {\n      this.setState({\n        showMnemonic: true,\n        mnemonic,\n        askPassword: false,\n        afterPassword: undefined,\n        errorPassword: \"\",\n      });\n    } else {\n      this.setState({ errorPassword: \"Wrong password!\" });\n    }\n  }\n\n  public onSend = async (\n    from: string,\n    to: string,\n    amount: number,\n    type = 0x1,\n    address = undefined\n  ) => {\n    const afterFunc = async (password: string) => {\n      const mnemonic: string = await this.wallet.db.GetMasterKey(\n        \"mnemonic\",\n        password\n      );\n\n      if (mnemonic) {\n        this.setState({\n          askPassword: false,\n          afterPassword: undefined,\n          errorPassword: \"\",\n        });\n        await this.onSendPassword(from, to, amount, password, type, address);\n      } else {\n        this.setState({ errorPassword: \"Wrong password!\" });\n      }\n    };\n    if (await this.wallet.GetMasterKey(\"mnemonic\", undefined)) {\n      await afterFunc(\"\");\n    } else {\n      this.setState({\n        askPassword: true,\n        afterPassword: afterFunc,\n        errorPassword: \"\",\n      });\n    }\n  };\n\n  public onSendPassword = async (\n    from: string,\n    to: string,\n    amount: number,\n    password = \"\",\n    type = 0x1,\n    address = undefined\n  ) => {\n    if (from == \"nav\" || from == \"staked\") {\n      try {\n        const txs = await this.wallet.NavCreateTransaction(\n          to,\n          amount,\n          \"\",\n          password,\n          true,\n          100000,\n          type,\n          address\n        );\n        if (txs) {\n          this.setState({\n            showConfirmTx: true,\n            confirmTxText: `${amount / 1e8} ${from} to ${to} Fee: ${txs.fee / 1e8\n              }`,\n            toSendTxs: txs.tx,\n          });\n        } else {\n          this.setState({\n            errorLoad: \"Could not create transaction.\",\n            showConfirmTx: false,\n            confirmTxText: \"\",\n            toSendTxs: [],\n          });\n        }\n      } catch (e: any) {\n        this.setState({\n          errorLoad: e.toString(),\n          showConfirmTx: false,\n          confirmTxText: \"\",\n          toSendTxs: [],\n        });\n      }\n    } else if (from == \"xnav\") {\n      try {\n        const txs = await this.wallet.xNavCreateTransaction(\n          to,\n          amount,\n          \"\",\n          password\n        );\n        if (txs) {\n          this.setState({\n            showConfirmTx: true,\n            confirmTxText: `${amount / 1e8} ${from} to ${to} Fee: ${txs.fee / 1e8\n              }`,\n            toSendTxs: txs.tx,\n          });\n        } else {\n          this.setState({\n            errorLoad: \"Could not create transaction.\",\n            showConfirmTx: false,\n            confirmTxText: \"\",\n            toSendTxs: [],\n          });\n        }\n      } catch (e: any) {\n        this.setState({\n          errorLoad: e.toString(),\n          showConfirmTx: false,\n          confirmTxText: \"\",\n          toSendTxs: [],\n        });\n      }\n    }\n  };\n\n  public onGift = async (\n    from: string,\n    to: string,\n    amount: number,\n    type = 0x1,\n  ) => {\n    const afterFunc = async (password: string) => {\n      const mnemonic: string = await this.wallet.db.GetMasterKey(\n        \"mnemonic\",\n        password\n      );\n      if (mnemonic) {\n        this.setState({\n          askPassword: false,\n          afterPassword: undefined,\n          errorPassword: \"\",\n        });\n        await this.onGiftPassword(from, to, amount, type);\n      } else {\n        this.setState({ errorPassword: \"Wrong password!\" });\n      }\n    };\n    if (await this.wallet.GetMasterKey(\"mnemonic\", undefined)) {\n      await afterFunc(\"\");\n    } else {\n      this.setState({\n        askPassword: true,\n        afterPassword: afterFunc,\n        errorPassword: \"\",\n      });\n    }\n  };\n\n  public onGiftPassword = async (\n    from: string,\n    to: string,\n    amount: number,\n    type = 0x1,\n    password = \"\",\n    address = undefined\n  ) => {\n\n    const name = (Math.random() + 1).toString(36).substring(5);\n    const walletPassword = (Math.random() + 1).toString(36).substring(5);\n    const spendingPassword = (Math.random() + 1).toString(36).substring(5);\n\n    const wallet = await this.generateTempWallet(name, walletPassword, spendingPassword);\n    await wallet.Connect();\n\n    try {\n      const txs = (from == \"nav\")\n        ? await this.wallet.NavCreateTransaction(\n            (await wallet.NavReceivingAddresses(false))[0].address,\n            amount,\n            \"gift\",\n            password,\n            true,\n            100000,\n            type,\n            address,\n          )\n        : await this.wallet.xNavCreateTransaction(\n          (await wallet.xNavReceivingAddresses(false))[0].address,\n          amount,\n          \"gift\",\n          password\n        );\n\n      if (txs) {\n        \n        const walletToEncode = {\n          name,\n          mnemonic: wallet.tempMnemonicStore,\n          password: walletPassword,\n          spendingPassword,\n          network: this.wallet.network,\n          transactionType: from,\n          amt: amount - txs.fee,\n        }\n\n        // encode wallet as gift code\n        const buff = Buffer.from(JSON.stringify(walletToEncode));\n        const encodedWallet: string = buff.toString(\"base64\");\n        \n        this.wallet.on(\"new_tx\", async (entry: IWalletHistory) => {\n          if (entry.amount === -amount && !this.state.showGiftCardDialog) {\n            console.log('received gift generating transaction');\n            if (entry.confirmed) {\n              this.setState({\n                showGiftCardDialog: true,\n                giftCardText: encodedWallet,\n              });\n            }\n          }\n        });\n        \n        this.setState({\n          showConfirmTx: true,\n          confirmTxText: `${amount / 1e8} ${from}  for gift voucher, Fee: ${txs.fee / 1e8}`,\n          toSendTxs: txs.tx,\n        });\n      } else {\n        this.setState({\n          errorLoad: \"Could not create transaction.\",\n          showConfirmTx: false,\n          confirmTxText: \"\",\n          toSendTxs: [],\n        });\n      }\n    } catch (e: any) {\n      this.setState({\n        errorLoad: e.toString(),\n        showConfirmTx: false,\n        confirmTxText: \"\",\n        toSendTxs: [],\n      });\n    }\n  };\n\n  private async generateTempWallet(name: string, password: string, spendingPassword: string): Promise<any> {\n\n    // const type = 'navcoin-js-v1';\n    const network = this.wallet.network;\n\n    let newMnemonic = ``;\n\n    const wallet = new this.njs.wallet.WalletFile({\n      file: name,\n      network,\n      password,\n      spendingPassword,\n      log: true,\n    });\n    // sub to mnemonic to retrieve it later on\n    wallet.on('new_mnemonic', (mnemonic: string) => newMnemonic = mnemonic);\n\n    try {\n      await wallet.Load();\n      wallet.tempMnemonicStore = newMnemonic;\n      console.log(wallet);\n    } catch (e) {\n      console.log(e);\n    }\n    return wallet;\n  }\n\n  public onRedeemGiftCode = async (\n    giftCode: string,\n    privateAddress: string,\n    publicAddress: string,\n  ) => {\n    try {\n      const decodedGiftCode = Buffer.from(giftCode, 'base64');\n      const giftWalletSrc = JSON.parse(decodedGiftCode.toString('ascii'));\n      const giftWallet = new this.njs.wallet.WalletFile({\n        file: giftWalletSrc.name,\n        mnemonic: giftWalletSrc.mnemonic,\n        type: `navcoin-js-v1`,\n        password: giftWalletSrc.password,\n        spendingPassword: giftWalletSrc.spendingPassword,\n        network: giftWalletSrc.network,\n        log: true,\n        adapter: \"websql\",\n      });\n\n      const giftObservable$ = new Observable<IGiftTransferWrapper>();\n      const giftObserver = {\n        next: async (giftInfo: IGiftTransferWrapper) => {\n          if (this.state.redeemingGiftCode) {\n\n            console.log(`gift card loading in state`);\n            this.setState({\n              redeemingGiftCode: false,\n              errorLoad: undefined,\n            })\n          }\n          if (giftInfo != undefined) {\n            try {\n\n              const walletBalance = await giftInfo.walletObj.GetBalance();\n              const txs = (giftInfo.giftSrc.transactionType === `nav`)\n              ? await giftInfo.walletObj.NavCreateTransaction(\n                privateAddress,\n                walletBalance.nav.confirmed,\n                \"received-gift\",\n                giftInfo.giftSrc.spendingPassword,\n                true,\n                10000,\n                0x1)\n              : await giftInfo.walletObj.xNavCreateTransaction(\n                privateAddress,\n                walletBalance.xnav.confirmed,\n                \"received-gift\",\n                giftInfo.giftSrc.spendingPassword,\n                true,\n              );\n              if (txs) {\n                console.log(txs)\n                this.setState({\n                  showConfirmTx: true,\n                  showConfirmText: true,\n                  confirmTxText: `You wish to redeem a gift code of ${giftInfo.giftSrc.amt} ${giftInfo.giftSrc.transactionType}?`,\n                  toSendTxs: txs.tx,\n                })\n              } else {\n                this.setState({\n                  errorLoad: \"Could not redeem gift code. Try again in a minute.\",\n                });\n              }\n            } catch (e) {\n              this.setState({\n                errorLoad: \"Could not redeem gift code. Try again in a minute.\",\n              });\n            }\n          }\n        },\n        error: (e: any) => console.error(e),\n        complete: async () => {\n          this.setState({\n            redeemingGiftCode: false,\n            errorLoad: undefined,\n          });\n\n          const { walletName } = giftWalletSrc.name;\n          giftWallet.Disconnect();\n          this.njs.wallet.WalletFile.RemoveWallet(walletName);\n          // await localforage.removeItem(giftWalletSrc.name);\n          await this.updateWalletList();\n        },\n      };\n\n      giftObservable$.subscribe(giftObserver);\n\n      giftWallet.on(\"sync_finished\", async () => {\n        console.log(`gift wallet sync finished`);\n        console.log((await giftWallet.GetBalance()));\n        const giftWrapper: IGiftTransferWrapper = {\n          walletObj: giftWallet,\n          giftSrc: giftWalletSrc,\n        };\n\n        await giftObserver.next(giftWrapper);\n        await giftObserver.complete();\n      });\n\n      await giftWallet.Load();\n      await giftWallet.Connect();\n    } catch (error) {\n      console.log(`error redeeming gift card: ${error}`);\n    }\n  };\n\n  public render = () => {\n    const {\n      walletName,\n      walletList,\n      loadingWallet,\n      errorLoad,\n      bottomNavigation,\n      connectingWallet,\n      redeemingGiftCode,\n      balances,\n      history,\n      syncProgress,\n      pendingQueue,\n      showMnemonic,\n      mnemonic,\n      askPassword,\n      afterPassword,\n      errorPassword,\n      utxos,\n      addresses,\n      confirmTxText,\n      showConfirmTx,\n      toSendTxs,\n      showGiftCardDialog,\n      giftCardText,\n      blockHeight,\n    } = this.state;\n\n    return (\n      <ThemeProvider theme={themeOptions}>\n        <CssBaseline />\n        <Container>\n          <Mnemonic\n            open={showMnemonic}\n            mnemonic={mnemonic}\n            onClose={() => {\n              this.setState({ mnemonic: \"\", showMnemonic: false });\n            }}\n          />\n          <ConfirmTx\n            open={showConfirmTx}\n            text={confirmTxText}\n            onClose={() => {\n              this.setState({\n                confirmTxText: \"\",\n                showConfirmTx: false,\n                toSendTxs: [],\n              });\n            }}\n            onOk={() => {\n              try {\n                this.wallet.SendTransaction(toSendTxs);\n              } catch (e: any) {\n                this.setState({\n                  errorLoad: e.toString(),\n                  showConfirmTx: false,\n                  confirmTxText: \"\",\n                  toSendTxs: [],\n                });\n              }\n              this.setState({\n                confirmTxText: \"\",\n                showConfirmTx: false,\n                toSendTxs: [],\n                // TODO: maybe re-enable if workaround for new_tx event event in onGiftPassward is found\n                // bottomNavigation: 0,\n              });\n            }}\n          />\n          <GiftCardDialog\n            open={showGiftCardDialog}\n            text={giftCardText}\n            onClose={() => {\n              this.setState({\n                showGiftCardDialog: false,\n                giftCardText: \"\",\n              })\n            }}\n          />\n          <AskPassword\n            open={askPassword}\n            onAccept={afterPassword}\n            onClose={() => {\n              this.setState({\n                askPassword: false,\n                afterPassword: undefined,\n                errorPassword: \"\",\n              });\n            }}\n            error={errorPassword}\n          />\n          {errorLoad ? (\n            <Error\n              actions={[\n                {\n                  text: \"ok\",\n                  action: () => {\n                    this.backToMainMenu();\n                  },\n                },\n              ]}\n            >\n              {errorLoad}\n            </Error>\n          ) : !walletName ? (\n            <MainMenu\n              wallets={walletList}\n              onLoad={async (\n                name: string,\n                mnemonic: string,\n                type: string,\n                password: string,\n                spendingPassword: string,\n                zap: boolean,\n                network: string,\n                giftCode: string,\n              ) => {\n                await this.loadWallet(\n                  name,\n                  mnemonic,\n                  type,\n                  password,\n                  spendingPassword,\n                  zap,\n                  network,\n                  giftCode,\n                );\n              }}\n            />\n          ) : loadingWallet ? (\n            <Loading>Loading wallet...</Loading>\n          ) : connectingWallet ? (\n            <Loading>Connecting to the network...</Loading>\n          ) : redeemingGiftCode ? (\n            <Loading>Redeeming gift code...</Loading>\n          ) : (\n            <>\n              {bottomNavigation == 0 ? (\n                <Balance\n                  balances={balances}\n                  history={history}\n                  syncProgress={syncProgress}\n                  pendingQueue={pendingQueue}\n                  onSwap={() => {\n                    this.setState({ bottomNavigation: 4 });\n                  }}\n                  onStake={() => {\n                    this.setState({ bottomNavigation: 5 });\n                  }}\n                />\n              ) : bottomNavigation == 1 ? (\n                <Send\n                  wallet={this.njs.wallet}\n                  network={this.wallet.network}\n                  balance={balances}\n                  onSend={this.onSend}\n                />\n              ) : bottomNavigation == 2 ? (\n                <Receive addresses={addresses}></Receive>\n              ) : bottomNavigation == 3 ? (\n                <Settings\n                  onClose={() => {\n                    this.onClose();\n                  }}\n                  onRemove={() => {\n                    this.onRemove();\n                  }}\n                  blockHeight={blockHeight}\n                  onMnemonic={async () => {\n                    const afterFunc = async (password: string) => {\n                      await this.showMnemonic(password);\n                    };\n                    if (await this.wallet.GetMasterKey(\"mnemonic\", undefined)) {\n                      await afterFunc(\"\");\n                    } else {\n                      this.setState({\n                        askPassword: true,\n                        afterPassword: afterFunc,\n                        errorPassword: \"\",\n                      });\n                    }\n                  }}\n                  walletName={walletName}\n                  network={this.wallet.network}\n                ></Settings>\n              ) : bottomNavigation == 4 ? (\n                <Gift\n                  wallet={this.njs.wallet}\n                  network={this.wallet.network}\n                  balance={balances}\n                  onGift={this.onGift}\n                  onRedeemGiftCode={this.onRedeemGiftCode}\n                  addresses={addresses}\n                  njs={this.njs}\n                />\n              ) : (\n                <>Unknown</>\n              )}\n              <Paper\n                sx={{ position: \"fixed\", bottom: 0, left: 0, right: 0 }}\n                elevation={10}\n              >\n                <BottomNavigation\n                  showLabels\n                  value={bottomNavigation}\n                  onChange={(event, newValue) => {\n                    this.setState({ bottomNavigation: newValue });\n                  }}\n                >\n                  <BottomNavigationAction\n                    label=\"Home\"\n                    icon={<AccountBalanceOutlined />}\n                  />\n                  <BottomNavigationAction\n                    label=\"Send\"\n                    icon={<PaymentOutlined />}\n                  />\n                  <BottomNavigationAction\n                    label=\"Receive\"\n                    icon={<MoveToInboxOutlined />}\n                  />\n                  <BottomNavigationAction\n                    label=\"Settings\"\n                    icon={<SettingsOutlined />}\n                  />\n                  <BottomNavigationAction\n                    label=\"Gifts\"\n                    icon={<PaymentOutlined />}\n                  />\n                </BottomNavigation>\n              </Paper>\n            </>\n          )}\n        </Container>\n      </ThemeProvider>\n    );\n  };\n}\n\nexport default App;","import * as React from \"react\";\nimport styled from \"@emotion/styled\";\nimport Container from \"@material-ui/core/Container\";\nimport { keyframes } from '@emotion/react'\n\nconst fadeIn = keyframes`\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n`;\n\nfunction container(props:any) {\n    return (\n      <Container sx={{\n          display: \"flex\",\n          alignItems: [\"start\"], //, \"center\"],\n          justifyContent: [\"start\"], //, \"center\"],\n          width: '100vw',\n          height: '100vh',\n          flexDirection: 'column',\n          maxHeight: '-webkit-fill-available',\n          animation: fadeIn + ' 1%s ease 0s normal 1',\n          px: ['0px', '0px', '0px', '0px', '0px', '0px']\n      }}>\n          {props.children}\n      </Container>\n    );\n}\n\n\nexport default container;","import WarningSharpIcon from '@material-ui/icons/WarningSharp';\nimport React from \"react\";\nimport Wrapper from \"./Wrapper\";\nimport {CardContent, CardHeader, Typography, Box, CardActions, Button} from \"@material-ui/core\";\n\nfunction Error(props:any) {\n    const {actions} = props;\n    return (\n        <Wrapper>\n            <CardHeader>\n\n            </CardHeader>\n            <CardContent sx={{\n                pr: '40px',\n                pl: '40px',\n                textAlign: 'center'\n            }\n            }>\n                <Box sx={{\n                    width:'100%',\n                    padding: theme => theme.spacing(0, 2, 2, 2),\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    flexDirection: 'column'\n                }}>\n                <WarningSharpIcon color={\"error\"} sx={{ fontSize: 60 }}/>\n                </Box>\n                <Typography>\n                {props.children}\n                </Typography>\n            </CardContent>\n            <CardActions>\n                {\n                    actions ? actions.map((e: any) => {\n                        return (\n                            <Button key={e.text} onClick={e.action}>{e.text}</Button>\n                        )\n                    }) : ''\n                }\n\n            </CardActions>\n        </Wrapper>\n    )\n}\n\nexport default Error;","import * as React from \"react\";\n\nimport {\n  Button,\n  CardContent,\n  CardHeader,\n  IconButton,\n  CssBaseline,\n  Typography,\n  Stack,\n  Divider,\n  Box,\n} from \"@material-ui/core\";\n\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport Wrapper from \"./Wrapper\";\nimport { ReactElement } from \"react\";\n\nconst TITLE = \"Settings\";\n\nfunction Settings(props: any): ReactElement {\n  const {\n    children,\n    onClose,\n    onRemove,\n    onMnemonic,\n    walletName,\n    network,\n    blockHeight,\n  } = props;\n  const [title, setTitle] = React.useState(TITLE);\n  const [option, setOption] = React.useState(0);\n\n  return (\n    <React.Fragment>\n      <Box\n        sx={{\n          display: \"flex\",\n          width: \"100%\",\n          height: \"100%\",\n          flexDirection: \"column\",\n        }}\n      >\n        <Typography\n          sx={{\n            m: 4,\n            mb: 2,\n            maxWidth: \"100%\",\n            wordWrap: \"break-word\",\n            textAlign: \"center\",\n          }}\n          variant={\"h4\"}\n        >\n          Settings\n        </Typography>\n        <Box\n          sx={{\n            maxWidth: 800,\n            width: \"90%\",\n            borderRadius: 1,\n            mt: 2,\n            alignSelf: \"center\",\n            padding: 4,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          {option == 0 ? (\n            <React.Fragment>\n              <Stack\n                spacing={2}\n                mx={1}\n                mb={2}\n                sx={{ maxWidth: 300, margin: \"auto\" }}\n              >\n                <Typography\n                  sx={{ textAlign: \"center\", fontWeight: 400 }}\n                  variant={\"body1\"}\n                >\n                  Wallet name:\n                </Typography>\n                <Typography\n                  sx={{ textAlign: \"center\", fontWeight: 10 }}\n                  variant={\"body2\"}\n                >\n                  {walletName}\n                </Typography>\n                <Typography\n                  sx={{ textAlign: \"center\", fontWeight: 400 }}\n                  variant={\"body1\"}\n                >\n                  Network:\n                </Typography>\n                <Typography\n                  sx={{ textAlign: \"center\", fontWeight: 10 }}\n                  variant={\"body2\"}\n                >\n                  {network}\n                </Typography>\n                <Typography\n                  sx={{ textAlign: \"center\", fontWeight: 400 }}\n                  variant={\"body1\"}\n                >\n                  Block height:\n                </Typography>\n                <Typography\n                  sx={{ textAlign: \"center\", fontWeight: 10, pb: 2 }}\n                  variant={\"body2\"}\n                >\n                  {blockHeight}\n                </Typography>\n                <Button onClick={onMnemonic}>View Mnemonic</Button>\n                <Button onClick={onRemove}>Remove wallet</Button>\n                <Button onClick={onClose}>Close wallet</Button>\n              </Stack>\n            </React.Fragment>\n          ) : (\n            <>{children}</>\n          )}\n        </Box>\n      </Box>\n    </React.Fragment>\n  );\n}\n\nexport default Settings;\n","import * as React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ContentCopyIcon from \"@material-ui/icons/ContentCopy\";\nimport { Paper } from \"@material-ui/core\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { useState } from \"react\";\n\ninterface DialogTitleProps {\n  id: string;\n  children?: React.ReactNode;\n  onClose: () => void;\n}\n\nconst BootstrapDialogTitle = (props: DialogTitleProps) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: (theme: any) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nexport default function Mnemonic(props: any) {\n  const { open, onClose, mnemonic } = props;\n\n  const handleClose = onClose;\n\n  return (\n    <div>\n      <Dialog\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <BootstrapDialogTitle\n          id=\"customized-dialog-title\"\n          onClose={handleClose}\n        >\n          Backup Mnemonic\n        </BootstrapDialogTitle>\n        <DialogContent>\n          <Typography gutterBottom>\n            The following mnemonic phrase will let you recreate the wallet.\n            Please back it up and keep it in a safe place out of the access of\n            others!\n          </Typography>\n          <Paper\n            sx={{\n              mx: 2,\n              mt: 3,\n              mb: 1,\n              p: 4,\n              position: \"relative\",\n              wordBreak: \"break-word\",\n            }}\n          >\n            <CopyToClipboard text={mnemonic}>\n              <IconButton sx={{ position: \"absolute\", bottom: 2, right: 2 }}>\n                <ContentCopyIcon />\n              </IconButton>\n            </CopyToClipboard>\n            <Typography gutterBottom>{mnemonic}</Typography>\n          </Paper>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} sx={{ mx: 2, mb: 2 }}>\n            I did backup the mnemonic phrase\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ContentCopyIcon from \"@material-ui/icons/ContentCopy\";\nimport { Input, Paper, TextField } from \"@material-ui/core\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { useState } from \"react\";\n\ninterface DialogTitleProps {\n  id: string;\n  children?: React.ReactNode;\n  onClose: () => void;\n}\n\nconst BootstrapDialogTitle = (props: DialogTitleProps) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: (theme: any) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nexport default function AskPassword(props: any) {\n  const { open, onClose, onAccept, error } = props;\n\n  const [password, setPassword] = useState(\"\");\n\n  const handleClose = onClose;\n\n  const handleAccept = onAccept;\n\n  return (\n    <div>\n      <Dialog\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <BootstrapDialogTitle\n          id=\"customized-dialog-title\"\n          onClose={handleClose}\n        >\n          Spending Password\n        </BootstrapDialogTitle>\n        <DialogContent\n          sx={{\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            display: \"flex\",\n            flexDirection: \"column\",\n          }}\n        >\n          <TextField\n            id=\"filled-password-input\"\n            label=\"Password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            variant=\"filled\"\n            error={error ? true : false}\n            sx={{ mx: 2, mt: 2, width: 320 }}\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }}\n          />\n          <Typography\n            sx={{\n              textAlign: \"right\",\n              color: (theme) => theme.palette.error.light,\n            }}\n          >\n            {error}\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            autoFocus\n            onClick={() => {\n              handleAccept(password);\n            }}\n            sx={{ mx: 2, mb: 2 }}\n          >\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import {\n  Box,\n  Button,\n  Divider,\n  MenuItem,\n  Select,\n  Stack,\n  TextField,\n  Typography,\n  InputAdornment,\n  IconButton,\n  InputLabel,\n  OutlinedInput,\n  FormControl,\n} from \"@material-ui/core\";\nimport React from \"react\";\n\nimport SplitButton from \"./elements/SplitButton\";\n\nexport default function Send(props: any): React.ReactElement {\n  const {\n    addresses,\n    balance,\n    onSend,\n    wallet,\n    network,\n    destination,\n    utxoType,\n    address,\n    hideTitle,\n    hideTo,\n    hideFrom,\n  } = props;\n\n  const [from, setFrom] = React.useState(utxoType == 0x2 ? \"staked\" : \"nav\");\n  if (!balance || !balance[from]) return <>Loading</>;\n  const [available, setAvailable] = React.useState(\n    balance[from].confirmed / 1e8\n  );\n  const [to, setTo] = React.useState(destination);\n  const [amount, setAmount] = React.useState<number | undefined>(undefined);\n  const [errorDest, setErrorDest] = React.useState(false);\n  const [errorAmount, setErrorAmount] = React.useState(false);\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        width: \"100%\",\n        height: \"100%\",\n        flexDirection: \"column\",\n      }}\n    >\n      {hideTitle ? (\n        <></>\n      ) : (\n        <Typography\n          sx={{\n            m: 4,\n            mb: 2,\n            maxWidth: \"100%\",\n            wordWrap: \"break-word\",\n            textAlign: \"center\",\n          }}\n          variant={\"h4\"}\n        >\n          Send\n        </Typography>\n      )}\n      <Box\n        sx={{\n          maxWidth: 800,\n          width: \"90%\",\n          borderRadius: 1,\n          mt: 2,\n\n          p: 2,\n          pt: 4,\n          alignSelf: \"center\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          bgcolor: \"background.paper\",\n        }}\n      >\n        <Box\n          sx={{\n            m: (theme) => theme.spacing(0, 1, 1, 1),\n          }}\n        >\n          <Stack spacing={2}>\n            {hideFrom ? (\n              <></>\n            ) : (\n              <FormControl>\n                <InputLabel id=\"network-label\">From</InputLabel>\n\n                <Select\n                  labelId={\"network-label\"}\n                  id=\"network\"\n                  value={from}\n                  fullWidth\n                  input={<OutlinedInput label=\"From\" />}\n                  onChange={(e) => {\n                    if (e.target.value == \"nav\") {\n                      if (amount == balance.xnav.confirmed / 1e8)\n                        setAmount(balance.nav.confirmed / 1e8);\n                      setAvailable(balance.nav.confirmed / 1e8);\n                    } else if (e.target.value == \"xnav\") {\n                      if (amount == balance.nav.confirmed / 1e8)\n                        setAmount(balance.xnav.confirmed / 1e8);\n                      setAvailable(balance.xnav.confirmed / 1e8);\n                    }\n                    setFrom(e.target.value);\n                  }}\n                  displayEmpty\n                >\n                  <MenuItem key=\"nav\" value=\"nav\">\n                    NAV ({balance.nav.confirmed / 1e8} available)\n                  </MenuItem>\n                  <MenuItem key=\"xnav\" value=\"xnav\">\n                    xNAV ({balance.xnav.confirmed / 1e8} available)\n                  </MenuItem>\n                </Select>\n              </FormControl>\n            )}\n\n            {hideTo ? (\n              <></>\n            ) : (\n              <>\n                <TextField\n                  autoComplete=\"off\"\n                  id=\"destination\"\n                  label=\"Destination\"\n                  value={to}\n                  placeholder=\"The address to send the coins to\"\n                  fullWidth\n                  error={errorDest}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  onChange={(e) => {\n                    if (wallet.bitcore.Address.isValid(e.target.value)) {\n                      setTo(e.target.value);\n                      setErrorDest(false);\n                    } else {\n                      console.log(\n                        wallet.bitcore.Address.getValidationError(\n                          e.target.value\n                        )\n                      );\n                      setErrorDest(true);\n                    }\n                  }}\n                />\n              </>\n            )}\n\n            <TextField\n              autoComplete=\"off\"\n              id=\"amount\"\n              label=\"Amount\"\n              placeholder=\"The amount to send\"\n              fullWidth\n              error={errorAmount}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              value={amount}\n              onChange={(e) => {\n                const am = parseFloat(e.target.value);\n                if (am > 0 && am <= available) {\n                  setAmount(am);\n                  setErrorAmount(false);\n                } else {\n                  setErrorAmount(true);\n                }\n              }}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <Typography\n                      onClick={() => {\n                        setAmount(available);\n                      }}\n                    >\n                      MAX\n                    </Typography>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Stack>\n        </Box>\n        <Box\n          sx={{\n            m: (theme) => theme.spacing(2, 1, 1, 1),\n          }}\n        >\n          <Button\n            sx={{ width: \"auto\", float: \"right\" }}\n            onClick={async () => {\n              if (!errorDest && !errorAmount && to && amount) {\n                await onSend(\n                  from || \"nav\",\n                  to,\n                  amount * 1e8,\n                  utxoType,\n                  address\n                );\n              }\n            }}\n          >\n            Send\n          </Button>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n","import * as React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ContentCopyIcon from \"@material-ui/icons/ContentCopy\";\nimport { Paper } from \"@material-ui/core\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { useState } from \"react\";\n\ninterface DialogTitleProps {\n  id: string;\n  children?: React.ReactNode;\n  onClose: () => void;\n}\n\nconst BootstrapDialogTitle = (props: DialogTitleProps) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: (theme: any) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nexport default function ConfirmTx(props: any) {\n  const { open, onClose, onOk, text } = props;\n\n  const handleClose = onClose;\n\n  return (\n    <div>\n      <Dialog\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <BootstrapDialogTitle\n          id=\"customized-dialog-title\"\n          onClose={handleClose}\n        >\n          Confirm Transaction\n        </BootstrapDialogTitle>\n        <DialogContent>\n          <Typography gutterBottom>\n            Do you confirm the following transaction?\n          </Typography>\n          <Paper\n            sx={{\n              mx: 2,\n              mt: 3,\n              mb: 1,\n              p: 4,\n              position: \"relative\",\n              wordBreak: \"break-word\",\n            }}\n          >\n            <Typography gutterBottom>{text}</Typography>\n          </Paper>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={onOk} sx={{ mx: 2, mb: 2 }}>\n            Yes\n          </Button>\n          <Button autoFocus onClick={handleClose} sx={{ mx: 2, mb: 2 }}>\n            No\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import {\n  Box,\n  Button,\n  FormControl,\n  InputAdornment,\n  InputLabel,\n  MenuItem,\n  OutlinedInput,\n  Select,\n  Stack,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport React from \"react\";\n\n\nexport default function Gift(props: any): React.ReactElement {\n  const {\n    wallet,\n    network,\n    balance,\n    hideTitle,\n    hideFrom,\n    utxoType,\n    onGift,\n    onRedeemGiftCode,\n    addresses,\n    njs,\n  } = props;\n\n  const [from, setFrom] = React.useState(utxoType == 0x2 ? \"staked\" : \"nav\");\n  if (!balance || !balance[from]) return <>Loading</>;\n  const [available, setAvailable] = React.useState(\n    balance[from].confirmed / 1e8\n  );\n\n  const [amount, setAmount] = React.useState<number | undefined>(undefined);\n  const [errorAmount, setErrorAmount] = React.useState(false);\n\n  const [giftCode, setGiftCode] = React.useState<string | undefined>(undefined);\n  const [errorGiftCode, setErrorGiftCode] = React.useState(false);\n\n  function validateGiftCode(code: string): boolean {\n    try {\n      const decodedGiftCode = Buffer.from(code, 'base64');\n      const giftWalletSrc = JSON.parse(decodedGiftCode.toString('ascii'));\n      const giftWallet = new njs.wallet.WalletFile({\n        file: giftWalletSrc.name,\n        mnemonic: giftWalletSrc.mnemonic,\n        type: `navcoin-js-v1`,\n        password: giftWalletSrc.password,\n        spendingPassword: giftWalletSrc.spendingPassword,\n        network: giftWalletSrc.network,\n        log: true,\n        adapter: \"websql\",\n      });\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n\n  return (\n    <Box\n    sx={{\n      display: \"flex\",\n      width: \"100%\",\n      height: \"100%\",\n      flexDirection: \"column\",\n    }}\n  >\n    <Box\n      sx={{\n        display: \"flex\",\n        width: \"100%\",\n        flexDirection: \"column\",\n      }}\n    >\n      {hideTitle ? (\n        <></>\n      ) : (\n        <Typography\n          sx={{\n            m: 4,\n            mb: 2,\n            maxWidth: \"100%\",\n            wordWrap: \"break-word\",\n            textAlign: \"center\",\n          }}\n          variant={\"h4\"}\n        >\n          Generate a gift code\n        </Typography>\n      )}\n      <Box\n        sx={{\n          maxWidth: 800,\n          width: \"90%\",\n          borderRadius: 1,\n          mt: 2,\n\n          p: 2,\n          pt: 4,\n          alignSelf: \"center\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          bgcolor: \"background.paper\",\n        }}\n      >\n        <Box\n          sx={{\n            m: (theme) => theme.spacing(0, 1, 1, 1),\n          }}\n        >\n          <Stack spacing={2}>\n            {hideFrom ? (\n              <></>\n            ) : (\n              <FormControl>\n                <InputLabel id=\"network-label\">From</InputLabel>\n\n                <Select\n                  labelId={\"network-label\"}\n                  id=\"network\"\n                  value={from}\n                  fullWidth\n                  input={<OutlinedInput label=\"From\" />}\n                  onChange={(e) => {\n                    if (e.target.value == \"nav\") {\n                      if (amount == balance.xnav.confirmed / 1e8)\n                        setAmount(balance.nav.confirmed / 1e8);\n                      setAvailable(balance.nav.confirmed / 1e8);\n                    } else if (e.target.value == \"xnav\") {\n                      if (amount == balance.nav.confirmed / 1e8)\n                        setAmount(balance.xnav.confirmed / 1e8);\n                      setAvailable(balance.xnav.confirmed / 1e8);\n                    }\n                    setFrom(e.target.value);\n                  }}\n                  displayEmpty\n                >\n                  <MenuItem key=\"nav\" value=\"nav\">\n                    NAV ({balance.nav.confirmed / 1e8} available)\n                  </MenuItem>\n                  <MenuItem key=\"xnav\" value=\"xnav\">\n                    xNAV ({balance.xnav.confirmed / 1e8} available)\n                  </MenuItem>\n                </Select>\n              </FormControl>\n            )}\n            <TextField\n              autoComplete=\"off\"\n              id=\"amount\"\n              label=\"Amount\"\n              placeholder=\"The amount to gift\"\n              fullWidth\n              error={errorAmount}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              value={amount}\n              onChange={(e) => {\n                const am = parseFloat(e.target.value);\n                if (am > 0 && am <= available) {\n                  setAmount(am);\n                  setErrorAmount(false);\n                } else {\n                  setErrorAmount(true);\n                }\n              }}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <Typography\n                      onClick={() => {\n                        setAmount(available);\n                      }}\n                    >\n                      MAX\n                    </Typography>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Stack>\n        </Box>\n        <Box\n          sx={{\n            m: (theme) => theme.spacing(2, 1, 1, 1),\n          }}\n        >\n          <Button\n            sx={{ width: \"auto\", float: \"right\" }}\n            onClick={async () => {\n              if (amount && amount > 0) {\n                await onGift(\n                  from || \"nav\",\n                  `gift`,\n                  amount * 1e8,\n                  utxoType,\n                );\n              }\n            }}\n          >\n            Generate voucher\n          </Button>\n        </Box>\n      </Box>\n    </Box>\n\n    <Typography\n        sx={{\n          m: 4,\n          mb: 2,\n          maxWidth: \"100%\",\n          wordWrap: \"break-word\",\n          textAlign: \"center\",\n        }}\n        variant={\"h4\"}\n      >\n        Redeem a gift code\n      </Typography>\n\n      <Box\n       sx={{\n        display: \"flex\",\n        width: \"100%\",\n        flexDirection: \"column\",\n      }}>\n\n        <Box\n          sx={{\n            maxWidth: 800,\n            width: \"90%\",\n            borderRadius: 1,\n            mt: 2,\n\n            p: 2,\n            pt: 4,\n            alignSelf: \"center\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            bgcolor: \"background.paper\",\n          }}\n        >\n          <Box\n            sx={{\n              m: (theme) => theme.spacing(0, 1, 1, 1),\n            }}\n          >\n            <Stack spacing={2}>\n\n              <TextField\n                autoComplete=\"off\"\n                id=\"giftCode\"\n                label=\"Gift code\"\n                placeholder=\"Enter the gift code\"\n                fullWidth\n                error={errorGiftCode}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                value={giftCode}\n                onChange={(e) => {\n                  const giftCodeVal = e.target.value;\n                  if (validateGiftCode(giftCodeVal)) {\n                    setErrorGiftCode(false);\n                  } else {\n                    setErrorGiftCode(true);\n                  }\n                  setGiftCode(giftCodeVal);\n                }}\n                InputProps={{ }}\n              />\n            </Stack>\n          </Box>\n          <Box\n            sx={{\n              m: (theme) => theme.spacing(2, 1, 1, 1),\n            }}\n          >\n          <Button\n            sx={{ width: \"auto\", float: \"right\" }}\n            onClick={async () => {\n              if (!errorGiftCode && giftCode) {\n                console.log(`gift code redeeming: ${giftCode}`);\n                const privateAddress = Object.keys(addresses[\"spending\"]['private'])[0];\n                const publicAddress = Object.keys(addresses[\"spending\"]['public'])[0];\n                await onRedeemGiftCode(\n                  giftCode,\n                  privateAddress,\n                  publicAddress,\n                );\n              }\n            }}\n          >\n            Redeem!\n          </Button>\n        </Box>\n\n      </Box>\n    </Box>\n  </Box>\n  );\n}","import * as React from \"react\";\nimport { DialogTitle, IconButton, Button, Dialog, DialogActions, DialogContent, Paper, Typography } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport QRCode from \"qrcode.react\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport ContentCopyIcon from \"@material-ui/icons/ContentCopy\";\n\n\ninterface DialogTitleProps {\n  id: string;\n  children?: React.ReactNode;\n  onClose: () => void;\n}\n\nconst BootstrapDialogTitle = (props: DialogTitleProps) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: (theme: any) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nexport default function GiftCardDialog(props: any) {\n\n\n  const { open, onClose, text } = props;\n\n  const handleClose = onClose;\n\n  return (\n    <div>\n      <Dialog\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <BootstrapDialogTitle\n          id=\"customized-dialog-title\"\n          onClose={handleClose}\n        >\n          Your gift code\n        </BootstrapDialogTitle>\n        <DialogContent\n          sx={{\n            alignSelf: \"center\",\n            margin: \"auto\",\n            width: \"100%\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            flexDirection: \"column\",\n          }}>\n          <QRCode\n            value={text}\n            title={text}\n            style={{\n              width: 250,\n              height: 250,\n            }}\n          ></QRCode>\n\n          <Paper sx={{\n            mx: 3,\n            mt: 2,\n            mb: 1,\n            p: 2,\n            position: \"relative\",\n            wordBreak: \"break-word\",\n            width: 250,\n          }}\n          >\n            <CopyToClipboard text={text}>\n              <IconButton sx={{ position: \"absolute\", bottom: 2, right: 2 }}>\n                <ContentCopyIcon />\n              </IconButton>\n            </CopyToClipboard>\n            <Typography gutterBottom>{text}</Typography>\n          </Paper>\n\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo.162d44eb.svg\";","export const TITLE = \"Navcoin Hackathon\";\n","// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst Mnemonic = require(\"bitcore-mnemonic\");\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst electrumMnemonic = require(\"electrum-mnemonic\");\n\nexport function IsValidMnemonic(mnemonic: string, type: string) {\n  try {\n    return type == \"navcash\"\n      ? electrumMnemonic.validateMnemonic(\n          mnemonic,\n          electrumMnemonic.PREFIXES.standard\n        )\n      : Mnemonic.isValid(mnemonic);\n  } catch (e) {\n    console.log(e);\n    return false;\n  }\n}\n","import * as React from \"react\";\nimport {\n  Box,\n  TextField,\n  Typography,\n  Button,\n  InputLabel,\n  FormControl,\n  Collapse,\n  Accordion,\n  AccordionSummary,\n  Stack,\n  Divider,\n} from \"@material-ui/core\";\nimport { MenuItem, Select } from \"@material-ui/core\";\nimport { TITLE } from \"../../constants\";\nimport { IsValidMnemonic } from \"../../utils/Mnemonic\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nclass ImportWallet extends React.Component<any, any> {\n  public walletTypes = [\n    [\"navcoin-js-v1\", TITLE],\n    [\"navcash\", \"NavCash\"],\n    [\"navcoin-core\", \"Navcoin Core\"],\n    [\"next\", \"Next Wallet\"],\n    [\"navpay\", \"NavPay\"],\n  ];\n\n  public networks = [\n    [\"mainnet\", \"Mainnet\"],\n    [\"testnet\", \"Testnet\"],\n  ];\n\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      ...props,\n      name: \"\",\n      mnemonic: \"\",\n      type: \"none\",\n      errorMnemonic: false,\n      errorName: false,\n      password: undefined,\n      spendingPassword: undefined,\n      network: \"mainnet\",\n    };\n  }\n\n  public getWalletName(type: string) {\n    for (const i in this.walletTypes) {\n      const el = this.walletTypes[i];\n\n      if (el[0] == type) return el[1];\n    }\n\n    return undefined;\n  }\n\n  public getNetworkName(type: string) {\n    for (const i in this.networks) {\n      const el = this.networks[i];\n\n      if (el[0] == type) return el[1];\n    }\n\n    return undefined;\n  }\n\n  public render() {\n    const {\n      wallets,\n      name,\n      mnemonic,\n      type,\n      errorMnemonic,\n      errorName,\n      onClick,\n      password,\n      spendingPassword,\n      network,\n    } = this.state;\n\n    return (\n      <React.Fragment>\n        <Box\n          sx={{\n            m: (theme) => theme.spacing(0, 1, 1, 1),\n          }}\n        >\n          <Stack spacing={2}>\n            <TextField\n              id=\"name\"\n              label=\"Name\"\n              placeholder=\"Wallet 1\"\n              fullWidth\n              InputLabelProps={{\n                shrink: true,\n              }}\n              error={errorName}\n              onChange={(e) => {\n                if (wallets.indexOf(e.target.value) < 0) {\n                  this.setState({ name: e.target.value, errorName: false });\n                } else {\n                  this.setState({ errorName: true });\n                }\n              }}\n            />\n\n            <TextField\n              id=\"mnemonic\"\n              label=\"Mnemonic\"\n              placeholder=\"scan nephew tissue abuse clutch present erase spoil leisure silent drink today\"\n              fullWidth\n              multiline\n              InputLabelProps={{\n                shrink: true,\n              }}\n              error={errorMnemonic}\n              onChange={(e) => {\n                if (IsValidMnemonic(e.target.value, type)) {\n                  this.setState({\n                    mnemonic: e.target.value,\n                    errorMnemonic: false,\n                  });\n                } else {\n                  this.setState({\n                    mnemonic: e.target.value,\n                    errorMnemonic: true,\n                  });\n                }\n              }}\n            />\n\n            <Select\n              id=\"type\"\n              value={type}\n              fullWidth\n              onChange={(e) => {\n                this.setState({ type: e.target.value });\n                if (IsValidMnemonic(mnemonic, e.target.value)) {\n                  this.setState({ errorMnemonic: false });\n                } else {\n                  this.setState({ errorMnemonic: true });\n                }\n              }}\n              error={!(this.getWalletName(type) || type == \"none\")}\n              displayEmpty\n              renderValue={(value: any) => {\n                return (\n                  <Typography>\n                    {value == \"none\" ? \"Wallet type\" : value}\n                  </Typography>\n                );\n              }}\n            >\n              {this.walletTypes.map((result) => {\n                return (\n                  <MenuItem key={result[0]} value={result[0]}>\n                    {result[1]}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n\n            <Divider light>Encryption settings (Recommended)</Divider>\n\n            <TextField\n              id=\"password\"\n              label=\"Wallet password\"\n              placeholder=\"The password used to open the wallet\"\n              fullWidth\n              type={\"password\"}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(e) => {\n                this.setState({ password: e.target.value });\n              }}\n            />\n\n            <TextField\n              id=\"spendingPassword\"\n              label=\"Spending password\"\n              placeholder=\"The password used to send transactions\"\n              fullWidth\n              type={\"password\"}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(e) => {\n                this.setState({ spendingPassword: e.target.value });\n              }}\n            />\n\n            <Divider light>Network</Divider>\n\n            <Select\n              id=\"network\"\n              value={network}\n              fullWidth\n              onChange={(e) => {\n                this.setState({ network: e.target.value });\n              }}\n              error={!this.getNetworkName(network)}\n              displayEmpty\n              renderValue={(value: any) => {\n                return <Typography>{this.getNetworkName(value)}</Typography>;\n              }}\n            >\n              {this.networks.map((result) => {\n                return (\n                  <MenuItem key={result[0]} value={result[0]}>\n                    {result[1]}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </Stack>\n        </Box>\n        <Box\n          sx={{\n            m: (theme) => theme.spacing(2, 1, 1, 1),\n          }}\n        >\n          <Button\n            sx={{ width: \"auto\", float: \"right\" }}\n            onClick={() => {\n              if (\n                !errorMnemonic &&\n                !errorName &&\n                mnemonic &&\n                this.getWalletName(type) &&\n                type != \"none\"\n              ) {\n                onClick(\n                  name,\n                  mnemonic,\n                  type,\n                  password,\n                  spendingPassword,\n                  false,\n                  network\n                );\n              } else {\n                if (!mnemonic) {\n                  this.setState({ errorMnemonic: true });\n                }\n              }\n            }}\n          >\n            Import\n          </Button>\n        </Box>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ImportWallet;\n","import * as React from \"react\";\nimport {\n  Box,\n  TextField,\n  Button,\n  Stack,\n  Typography,\n  Select,\n  MenuItem,\n  Divider,\n} from \"@material-ui/core\";\n\nclass CreateWallet extends React.Component<any, any> {\n  public networks = [\n    [\"mainnet\", \"Mainnet\"],\n    [\"testnet\", \"Testnet\"],\n  ];\n\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      ...props,\n      name: \"\",\n      errorName: false,\n      password: undefined,\n      spendingPassword: undefined,\n      network: \"mainnet\",\n    };\n  }\n\n  public getNetworkName(type: string) {\n    for (const i in this.networks) {\n      const el = this.networks[i];\n\n      if (el[0] == type) return el[1];\n    }\n\n    return undefined;\n  }\n\n  public render() {\n    const {\n      wallets,\n      name,\n      errorName,\n      onClick,\n      password,\n      spendingPassword,\n      network,\n    } = this.state;\n\n    return (\n      <React.Fragment>\n        <Box\n          sx={{\n            m: (theme) => theme.spacing(0, 1, 1, 1),\n          }}\n        >\n          <Stack spacing={2}>\n            <TextField\n              id=\"name\"\n              label=\"Name\"\n              placeholder=\"Wallet 1\"\n              fullWidth\n              InputLabelProps={{\n                shrink: true,\n              }}\n              error={errorName}\n              onChange={(e) => {\n                if (wallets.indexOf(e.target.value) < 0) {\n                  this.setState({ name: e.target.value, errorName: false });\n                } else {\n                  this.setState({ errorName: true });\n                }\n              }}\n            />\n\n            <Divider light>Encryption settings (Recommended)</Divider>\n\n            <TextField\n              id=\"password\"\n              label=\"Wallet password\"\n              placeholder=\"The password used to open the wallet\"\n              fullWidth\n              type={\"password\"}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(e) => {\n                this.setState({ password: e.target.value });\n              }}\n            />\n\n            <TextField\n              id=\"spendingPassword\"\n              label=\"Spending password\"\n              placeholder=\"The password used to send transactions\"\n              fullWidth\n              type={\"password\"}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(e) => {\n                this.setState({ spendingPassword: e.target.value });\n              }}\n            />\n\n            <Divider light>Network</Divider>\n\n            <Select\n              id=\"network\"\n              value={network}\n              fullWidth\n              onChange={(e) => {\n                this.setState({ network: e.target.value });\n              }}\n              error={!this.getNetworkName(network)}\n              displayEmpty\n              renderValue={(value: any) => {\n                return <Typography>{this.getNetworkName(value)}</Typography>;\n              }}\n            >\n              {this.networks.map((result) => {\n                return (\n                  <MenuItem key={result[0]} value={result[0]}>\n                    {result[1]}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </Stack>\n        </Box>\n        <Box\n          sx={{\n            m: (theme) => theme.spacing(2, 1, 1, 1),\n          }}\n        >\n          <Button\n            sx={{ width: \"auto\", float: \"right\" }}\n            onClick={() => {\n              if (!errorName) {\n                onClick(\n                  name,\n                  undefined,\n                  undefined,\n                  password,\n                  spendingPassword,\n                  false,\n                  network\n                );\n              }\n            }}\n          >\n            Create\n          </Button>\n        </Box>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default CreateWallet;\n","import * as React from \"react\";\nimport {\n  Box,\n  TextField,\n  Button,\n  FormControl,\n  Select,\n  MenuItem,\n  InputLabel,\n  Stack,\n  Typography,\n  FormControlLabel,\n  Checkbox,\n} from \"@material-ui/core\";\nimport { CheckBox } from \"@material-ui/icons\";\n\nclass OpenWallet extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      ...props,\n      name: \"\",\n      errorName: false,\n      password: undefined,\n      spendingPassword: undefined,\n      zap: false,\n    };\n  }\n\n  public render() {\n    const {\n      wallets,\n      name,\n      errorName,\n      onClick,\n      password,\n      spendingPassword,\n      zap,\n    } = this.state;\n\n    return (\n      <React.Fragment>\n        <Box\n          sx={{\n            m: (theme) => theme.spacing(0, 1, 0, 1),\n          }}\n        >\n          <Stack spacing={2}>\n            <Select\n              id=\"name\"\n              value={name}\n              fullWidth\n              onChange={(e) => {\n                if (wallets.indexOf(e.target.value) >= 0) {\n                  this.setState({ name: e.target.value, errorName: false });\n                } else {\n                  this.setState({ errorName: true });\n                }\n              }}\n              error={errorName}\n            >\n              {wallets.map((wallet: string) => {\n                return (\n                  <MenuItem key={wallet} value={wallet}>\n                    {wallet}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n\n            <TextField\n              id=\"password\"\n              label=\"Wallet password\"\n              placeholder=\"The password used to open the wallet\"\n              fullWidth\n              type={\"password\"}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(e) => {\n                this.setState({ password: e.target.value });\n              }}\n            />\n\n            <FormControlLabel\n              value=\"1\"\n              control={\n                <Checkbox\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    this.setState({ zap: e.target.checked });\n                  }}\n                />\n              }\n              label=\"Resync Wallet\"\n              labelPlacement=\"end\"\n            />\n          </Stack>\n        </Box>\n        <Box\n          sx={{\n            m: (theme) => theme.spacing(2, 1, 2, 1),\n          }}\n        >\n          <Button\n            sx={{ width: \"auto\", float: \"right\" }}\n            onClick={() => {\n              if (!errorName && name) {\n                onClick(name, undefined, undefined, password, undefined, zap);\n              }\n              if (!name) this.setState({ errorName: true });\n            }}\n          >\n            Open\n          </Button>\n        </Box>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default OpenWallet;\n","import { Box, Stack, TextField, Divider, Select, Typography, MenuItem, Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport Default from \"../../themes/Default\";\nimport CreateWallet from \"./CreateWallet\";\n\nclass CreateWalletWithCode extends CreateWallet {\n\n    constructor(props: any) {\n        super(props);\n    \n        this.state = {\n          ...props,\n          name: \"\",\n          errorName: false,\n          password: undefined,\n          spendingPassword: undefined,\n          network: \"mainnet\",\n          giftCode: \"\",\n        };\n      }\n    \n  public render() {\n\n    const {\n        wallets,\n        name,\n        errorName,\n        onClick,\n        password,\n        spendingPassword,\n        network,\n        giftCode,\n    } = this.state;\n\n    return (\n      <React.Fragment>\n        <Box\n          sx={{\n            m: (theme) => theme.spacing(0, 1, 1, 1),\n          }}\n        >\n          <Stack spacing={2}>\n            <TextField\n              id=\"name\"\n              label=\"Name\"\n              placeholder=\"Wallet 1\"\n              fullWidth\n              InputLabelProps={{\n                shrink: true,\n              }}\n              error={errorName}\n              onChange={(e) => {\n                if (wallets.indexOf(e.target.value) < 0) {\n                  this.setState({ name: e.target.value, errorName: false });\n                } else {\n                  this.setState({ errorName: true });\n                }\n              }}\n            />\n\n            <Divider light>Encryption settings (Recommended)</Divider>\n\n            <TextField\n              id=\"password\"\n              label=\"Wallet password\"\n              placeholder=\"The password used to open the wallet\"\n              fullWidth\n              type={\"password\"}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(e) => {\n                this.setState({ password: e.target.value });\n              }}\n            />\n\n            <TextField\n              id=\"spendingPassword\"\n              label=\"Spending password\"\n              placeholder=\"The password used to send transactions\"\n              fullWidth\n              type={\"password\"}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(e) => {\n                this.setState({ spendingPassword: e.target.value });\n              }}\n            />\n\n            <Divider light>Network</Divider>\n\n            <Select\n              id=\"network\"\n              value={network}\n              fullWidth\n              onChange={(e) => {\n                this.setState({ network: e.target.value });\n              }}\n              error={!this.getNetworkName(network)}\n              displayEmpty\n              renderValue={(value: any) => {\n                return <Typography>{this.getNetworkName(value)}</Typography>;\n              }}\n            >\n              {this.networks.map((result) => {\n                return (\n                  <MenuItem key={result[0]} value={result[0]}>\n                    {result[1]}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n\n            <Divider light>Gift Code</Divider>\n\n            <TextField\n              id=\"giftCode\"\n              label=\"Gift code\"\n              placeholder=\"Enter your gift code to redeem\"\n              fullWidth\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(e) => {\n                this.setState({ giftCode: e.target.value });\n              }}\n            />\n\n          </Stack>\n        </Box>\n        <Box\n          sx={{\n            m: (theme) => theme.spacing(2, 1, 1, 1),\n          }}\n        >\n          <Button\n            sx={{ width: \"auto\", float: \"right\" }}\n            onClick={() => {\n              if (!errorName) {\n                onClick(\n                  name,\n                  undefined,\n                  undefined,\n                  password,\n                  spendingPassword,\n                  false,\n                  network,\n                  giftCode\n                );\n              }\n            }}\n          >\n            Create\n          </Button>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n\n}\n\nexport default CreateWalletWithCode;","import * as React from \"react\";\nimport logo from \"../logo.svg\";\n\nimport {\n  Box,\n  Button,\n  CardContent,\n  CardHeader,\n  IconButton,\n  CssBaseline,\n  Typography,\n  Stack,\n} from \"@material-ui/core\";\n\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { TITLE } from \"../constants\";\nimport ImportWallet from \"./MainMenu/ImportWallet\";\nimport CreateWallet from \"./MainMenu/CreateWallet\";\nimport OpenWallet from \"./MainMenu/OpenWallet\";\nimport Wrapper from \"./Wrapper\";\nimport CreateWalletWithCode from \"./MainMenu/CreateWalletWithCode\";\n\nfunction MainMenu(props: any) {\n  const { wallets, children, onLoad } = props;\n  const [title, setTitle] = React.useState(TITLE);\n  const [option, setOption] = React.useState(0);\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Wrapper>\n        <CardHeader\n          title={\n            <Typography\n              sx={\n                option == 0\n                  ? {\n                      marginTop: \"10px\",\n                      textAlign: \"center\",\n                    }\n                  : {\n                      textAlign: \"center\",\n                      paddingRight: \"45px\",\n                    }\n              }\n              variant={option == 0 ? \"h4\" : \"h6\"}\n            >\n              {title}\n            </Typography>\n          }\n          avatar={\n            option != 0 ? (\n              <IconButton\n                aria-label=\"settings\"\n                onClick={() => {\n                  setOption(0);\n                  setTitle(TITLE);\n                }}\n                sx={{\n                  alignSelf: \"end\",\n                }}\n              >\n                <ArrowBackIosIcon />\n              </IconButton>\n            ) : (\n              \"\"\n            )\n          }\n        ></CardHeader>\n        <CardContent\n          sx={{\n            justifyContent: [null], //, 'center']\n          }}\n        >\n          {option == 0 ? (\n            <React.Fragment>\n              <Box\n                sx={{\n                  width: \"100%\",\n                  padding: (theme) => theme.spacing(0, 2, 2, 2),\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <img\n                  src={logo}\n                  width={80}\n                  style={{\n                    paddingBottom: \"50px\",\n                    paddingTop: \"30px\",\n                  }}\n                />\n              </Box>\n\n              <Stack spacing={2} mx={1} mb={2}>\n                {wallets.length ? (\n                  <Button\n                    onClick={() => {\n                      setOption(1);\n                      setTitle(\"Open Wallet\");\n                    }}\n                  >\n                    Open a wallet\n                  </Button>\n                ) : (\n                  \"\"\n                )}\n\n                <Button\n                  onClick={() => {\n                    setOption(2);\n                    setTitle(\"Create Wallet\");\n                  }}\n                >\n                  Create a new wallet\n                </Button>\n\n                <Button\n                  onClick={() => {\n                    setOption(3);\n                    setTitle(\"Import Wallet\");\n                  }}\n                >\n                  Import wallet\n                </Button>\n\n                <Button\n                  onClick={() => {\n                    setOption(4);\n                    setTitle(\"Redeem a gift code\");\n                  }}\n                >\n                  Redeeem a Gift Code\n                </Button>\n              </Stack>\n            </React.Fragment>\n          ) : option == 1 ? (\n            <OpenWallet onClick={onLoad} wallets={wallets} />\n          ) : option == 2 ? (\n            <CreateWallet onClick={onLoad} wallets={wallets} />\n          ) : option == 3 ? (\n            <ImportWallet onClick={onLoad} wallets={wallets} />\n          ) : option == 4 ? (\n            <CreateWalletWithCode onClick={onLoad} wallets={wallets} />\n          ) : (\n            <>{children}</>\n          )}\n        </CardContent>\n      </Wrapper>\n    </React.Fragment>\n  );\n}\n\nexport default MainMenu;\n","export default __webpack_public_path__ + \"static/media/NAV.b964b9b0.png\";","export default __webpack_public_path__ + \"static/media/XNAV.73904c2d.png\";","import React, { useState, useEffect } from \"react\";\nimport {\n  Alert,\n  Avatar,\n  Box,\n  Button,\n  IconButton,\n  LinearProgress,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemIcon,\n  ListItemText,\n  Menu,\n  MenuItem,\n  Pagination,\n  Typography,\n} from \"@material-ui/core\";\nimport { ExpandMoreOutlined } from \"@material-ui/icons\";\n\nimport { RedeemOutlined } from \"@material-ui/icons\"\n\nimport staking from \"../assets/earn_staking.png\";\nimport swap from \"../assets/swap_xnav.png\";\nimport nav from \"../assets/NAV.png\";\nimport xnav from \"../assets/XNAV.png\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nfunction useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\nfunction Balance(props: any): React.ReactElement {\n  const { balances, history, syncProgress, pendingQueue, onSwap, onStake } =\n    props;\n\n  const [hideWarning, setHideWarning] = useState(false);\n  const [pageNumber, setPageNumber] = useState(1);\n\n  const { height, width } = useWindowDimensions();\n\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const itemsCount = Math.floor((height - 390) / 70);\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        width: \"100%\",\n        height: \"100%\",\n        flexDirection: \"column\",\n      }}\n    >\n      {syncProgress < 100 && syncProgress >= 0 ? (\n        <>\n          <Typography sx={{ width: \"100\", textAlign: \"center\", p: 2 }}>\n            Synchronizing...{\" \"}\n            {pendingQueue > 0 ? `${pendingQueue} transactions left.` : \"\"}\n          </Typography>\n          <LinearProgress\n            variant={syncProgress == 0 ? \"indeterminate\" : \"determinate\"}\n            value={syncProgress}\n            sx={{ backgroundColor: \"background.paper\" }}\n          ></LinearProgress>\n        </>\n      ) : (\n        <Typography\n          sx={{\n            m: 4,\n            mb: 2,\n            maxWidth: \"100%\",\n            wordWrap: \"break-word\",\n            textAlign: \"center\",\n          }}\n          variant={\"h4\"}\n        >\n          Home\n        </Typography>\n      )}\n\n      {syncProgress < 100 && syncProgress >= 0 && !hideWarning && (\n        <Alert\n          sx={{\n            maxWidth: 400,\n            alignSelf: \"center\",\n            px: 4,\n            mt: 2,\n            backgroundColor: \"rgba(0,0,0,0.9)\",\n          }}\n          severity={\"warning\"}\n          onClick={() => {\n            setHideWarning(true);\n          }}\n        >\n          {/* eslint-disable-next-line react/no-unescaped-entities */}\n          The wallet is currently syncing, the balances won't be accurate.\n          <Box sx={{ textAlign: \"right\", fontSize: 10 }}>\n            Click to hide warning\n          </Box>\n        </Alert>\n      )}\n      <Box\n        sx={{\n          maxWidth: 800,\n          width: \"90%\",\n          bgcolor: \"background.paper\",\n          boxShadow: 1,\n          borderRadius: 1,\n          p: 1,\n          mt: 2,\n          alignSelf: \"center\",\n        }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            height: \"100%\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            position: \"relative\",\n          }}\n        >\n          <Box sx={{ padding: 1 }}>\n            <Box\n              sx={{\n                color: \"text.primary\",\n                fontSize: 18,\n                fontWeight: \"medium\",\n                textAlign: \"center\",\n              }}\n            >\n              {(\n                (balances.nav.confirmed + balances.nav.pending) /\n                1e8\n              ).toLocaleString()}\n            </Box>\n            <Box\n              sx={{\n                color: \"success.dark\",\n                fontSize: 12,\n                verticalAlign: \"sub\",\n              }}\n            />\n            <Box\n              sx={{\n                color: \"info.dark\",\n                fontWeight: \"medium\",\n                mx: 0.5,\n                fontSize: 12,\n                textAlign: \"center\",\n              }}\n            >\n              Public NAV\n            </Box>\n          </Box>\n\n          <Box sx={{ padding: 1 }}>\n            <Box\n              sx={{\n                color: \"text.secondary\",\n                fontSize: 18,\n                fontWeight: \"medium\",\n                textAlign: \"center\",\n              }}\n            >\n              {(\n                (balances.xnav.confirmed + balances.xnav.pending) /\n                1e8\n              ).toLocaleString()}\n            </Box>\n            <Box\n              sx={{\n                color: \"success.dark\",\n                fontSize: 12,\n                verticalAlign: \"sub\",\n              }}\n            />\n            <Box\n              sx={{\n                color: \"info.dark\",\n                fontWeight: \"medium\",\n                mx: 0.5,\n                fontSize: 12,\n                textAlign: \"center\",\n              }}\n            >\n              Private xNAV\n            </Box>\n          </Box>\n\n          <Box sx={{ padding: 1 }}>\n            <Box\n              sx={{\n                color: \"text.secondary\",\n                fontSize: 18,\n                fontWeight: \"medium\",\n                textAlign: \"center\",\n              }}\n            >\n              {(\n                (balances.staked.confirmed + balances.staked.pending) /\n                1e8\n              ).toLocaleString()}\n            </Box>\n            <Box\n              sx={{\n                color: \"success.dark\",\n                fontSize: 12,\n                verticalAlign: \"sub\",\n              }}\n            />\n            <Box\n              sx={{\n                color: \"info.dark\",\n                fontWeight: \"medium\",\n                mx: 0.5,\n                fontSize: 12,\n                textAlign: \"center\",\n              }}\n            >\n              Staking NAV\n            </Box>\n          </Box>\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          maxWidth: 800,\n          width: \"90%\",\n          bgcolor: \"background.paper\",\n          boxShadow: 1,\n          borderRadius: 1,\n          mt: 2,\n          alignSelf: \"center\",\n        }}\n      >\n        <List\n          sx={{\n            maxWidth: 800,\n            bgcolor: \"background.paper\",\n            overflow: \"scroll\",\n            flexGrow: 1,\n          }}\n        >\n          {history\n            .slice((pageNumber - 1) * itemsCount, pageNumber * itemsCount)\n            .map((el: any) => {\n              const elMemos: string = el.memos?.out[0];\n              let renderGiftIcon = false;\n              if (elMemos?.startsWith(\"received-gift\")) {\n                renderGiftIcon = true;\n              }\n              return (\n                <>\n                  <ListItem\n                    alignItems=\"flex-start\"\n                    key={el.id}\n                    sx={{\n                      paddingLeft: 4,\n                    }}\n                  >\n                    <ListItemAvatar>\n                      <Avatar\n                        alt={el.type == \"xnav\" ? xnav : nav}\n                        src={el.type == \"xnav\" ? xnav : nav}\n                      />\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={\n                        <Typography\n                          sx={{\n                            color: (theme) =>\n                              el.amount > 0\n                                ? theme.palette.success.light\n                                : theme.palette.error.light,\n                            fontSize: \"14px\",\n                          }}\n                        >\n                          {\" \"}\n                          {String(el.amount / 1e8) +\n                            \" \" +\n                            (el.type == \"xnav\" ? \"xNAV\" : \"NAV\")}\n                        </Typography>\n                      }\n                      secondary={\n                        <React.Fragment>\n                          <Typography\n                            sx={{ display: \"inline\", fontSize: \"12px\" }}\n                            variant=\"body2\"\n                            color=\"text.primary\"\n                          >\n                            {el.type == \"nav\"\n                              ? \"NAV\"\n                              : el.type == \"xnav\"\n                              ? \"xNAV\"\n                              : \"Staking\"}\n                          </Typography>\n                          { renderGiftIcon && <RedeemOutlined style={{ fontSize: 12 }}/>}\n                        </React.Fragment>\n                      }\n                    />\n                    <ListItemText\n                      primary={\n                        <React.Fragment>\n                          <Typography\n                            sx={{\n                              paddingRight: 4,\n                              textAlign: \"right\",\n                              fontSize: \"12px\",\n                            }}\n                            color=\"text.secondary\"\n                            variant=\"body2\"\n                          >\n                            {new Date(el.timestamp * 1000).toLocaleString()}{\" \"}\n                          </Typography>\n                        </React.Fragment>\n                      }\n                      secondary={\n                        <React.Fragment>\n                          <Typography\n                            sx={{\n                              paddingRight: 4,\n                              textAlign: \"right\",\n                              fontSize: \"12px\",\n                            }}\n                            color=\"text.secondary\"\n                            variant=\"body2\"\n                          >\n                            {el.confirmed ? \"Confirmed\" : \"Pending\"}\n                          </Typography>\n                        </React.Fragment>\n                      }\n                    />\n                  </ListItem>\n                </>\n              );\n            })}\n        </List>\n      </Box>\n      <Pagination\n        sx={{ mt: 2, mx: \"auto\" }}\n        count={Math.ceil(history.length / itemsCount)}\n        variant=\"outlined\"\n        shape=\"rounded\"\n        onChange={(event: React.ChangeEvent<unknown>, value: number) => {\n          setPageNumber(value);\n        }}\n      />\n\n      <Box sx={{}}></Box>\n    </Box>\n  );\n}\n\nexport default Balance;\n","import * as React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\n\nexport default function SplitButton(props: any) {\n  const { options, onChange, width } = props;\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef<HTMLDivElement>(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  const handleClick = () => {\n    console.info(`You clicked ${options[selectedIndex]}`);\n  };\n\n  const handleMenuItemClick = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    index: number\n  ) => {\n    onChange(index);\n    setSelectedIndex(index);\n    setOpen(false);\n  };\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event: Event) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target as HTMLElement)\n    ) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      <ButtonGroup\n        variant=\"contained\"\n        ref={anchorRef}\n        aria-label=\"split button\"\n        sx={{ width: width }}\n      >\n        <Button onClick={handleClick}>{options[selectedIndex]}</Button>\n        <Button\n          size=\"medium\"\n          aria-controls={open ? \"split-button-menu\" : undefined}\n          aria-expanded={open ? \"true\" : undefined}\n          aria-label=\"select merge strategy\"\n          aria-haspopup=\"menu\"\n          onClick={handleToggle}\n          sx={{ width: 40 }}\n        >\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={open}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === \"bottom\" ? \"center top\" : \"center bottom\",\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList id=\"split-button-menu\">\n                  {options.map((option: string, index: number) => (\n                    <MenuItem\n                      key={option}\n                      selected={index === selectedIndex}\n                      onClick={(event) => {\n                        handleMenuItemClick(event, index);\n                      }}\n                    >\n                      {option}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { Box, Button, Paper, Typography } from \"@material-ui/core\";\n\nimport QRCode from \"qrcode.react\";\nimport SplitButton from \"./elements/SplitButton\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ContentCopyIcon from \"@material-ui/icons/ContentCopy\";\n\nfunction Receive(props: any): React.ReactElement {\n  const { addresses, hideTitle } = props;\n  const [addressType, setAddressType] = React.useState(\"public\");\n  if (!addresses[\"spending\"]) return <Typography>Loading</Typography>;\n  let address = Object.keys(addresses[\"spending\"][addressType])[0];\n  if (!address) return <Typography>Loading</Typography>;\n  for (const i in addresses[\"spending\"][addressType]) {\n    if (!addresses[\"spending\"][addressType][i].used) {\n      address = i;\n      break;\n    }\n  }\n\n  const addressTypes: string[] = [];\n  const addressOptions: string[] = [];\n\n  if (addresses.spending.public) {\n    addressTypes.push(\"public\");\n    addressOptions.push(\"Public NAV\");\n  }\n\n  if (addresses.spending.private) {\n    addressTypes.push(\"private\");\n    addressOptions.push(\"Private xNAV\");\n  }\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        width: \"100%\",\n        height: \"100%\",\n        flexDirection: \"column\",\n      }}\n    >\n      {hideTitle ? (\n        <></>\n      ) : (\n        <Typography\n          sx={{\n            m: 4,\n            mb: 2,\n            maxWidth: \"100%\",\n            wordWrap: \"break-word\",\n            textAlign: \"center\",\n          }}\n          variant={\"h4\"}\n        >\n          Receiving Address\n        </Typography>\n      )}\n      <Box\n        sx={{\n          maxWidth: \"90%\",\n          width: \"800\",\n          borderRadius: 1,\n          mt: 2,\n          alignSelf: \"center\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Box\n          sx={{\n            alignSelf: \"center\",\n            margin: \"auto\",\n            width: \"100%\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            flexDirection: \"column\",\n          }}\n        >\n          {addressTypes.length > 1 ? (\n            <Box\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                mb: 2,\n              }}\n            >\n              <Box sx={{ mx: 4, width: 250 }}>\n                <SplitButton\n                  onChange={(index: number) => {\n                    setAddressType(addressTypes[index]);\n                  }}\n                  options={addressOptions}\n                  width={250}\n                ></SplitButton>\n              </Box>\n            </Box>\n          ) : (\n            <></>\n          )}\n\n          <QRCode\n            value={address}\n            title={address}\n            style={{\n              width: 250,\n              height: 250,\n            }}\n          ></QRCode>\n\n          <Paper\n            sx={{\n              mx: 3,\n              mt: 2,\n              mb: 1,\n              p: 2,\n              position: \"relative\",\n              wordBreak: \"break-word\",\n              width: 250,\n            }}\n          >\n            <CopyToClipboard text={address}>\n              <IconButton sx={{ position: \"absolute\", bottom: 2, right: 2 }}>\n                <ContentCopyIcon />\n              </IconButton>\n            </CopyToClipboard>\n            <Typography gutterBottom>{address}</Typography>\n          </Paper>\n        </Box>\n      </Box>\n\n      <Box sx={{}}></Box>\n    </Box>\n  );\n}\n\nexport default Receive;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst njs = require(\"navcoin-js\");\n\nnjs.wallet.Init().then(async () => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App njs={njs} />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n});\n"],"sourceRoot":""}